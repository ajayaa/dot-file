# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

set-window-option -g mode-keys vi

# After these four lines are applied, you'll have Vim-like bindings for
# copy-mode:
#   C-b [       Enter copy mode
#   C-b v       (in copy mode) begin copy selection
#   C-b y       (in copy mode) Copy selected text
#   r           (in copy mode) toggles between normal copy and block copy
#   C-b P       Paste selection in normal mode (Note, it is capital P)
#unbind p
bind P paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'r' rectangle-toggle

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls  5for copy mode
setw -g mode-keys vi

#In copy mode 'y' and 'v' would work as they work in vim.
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'r' rectangle-toggle


set -g status-right "#(uptime|awk '{print $11}')"
set -g display-time 3000
set -g status-bg black
set -g status-fg cyan
#set-window-option -g window-status-current-attr bright,reverse
#set-window-option -g window-status-current-bg cyan
#set-window-option -g window-status-current-fg black
#set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-bg white

# Allow mouse scroll to scroll the terminal up and down, by automatically
# entering the copy mode
set -g mouse on

#bind-key -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
#bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
#bind -n WheelUpPane if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -e\"'
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M
#set -g mouse-select-window onset -g mouse on
# Increase scrollback buffer from 3k to 10k
set-option -g history-limit 1000000

set -g mouse on

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Use c-q instead of c-b as the prefix
#unbind C-b
#set -g prefix C-q
#bind C-q send-prefix
#bind q send-prefix

# set tmux to correct term.
set -g default-terminal "screen-256color"
# start window number from 1
set -g base-index 1
setw -g pane-base-index 1

#renumber windows upon exiting one of the windows.
set-option -g renumber-windows on

# Add copied text in tmux to system clipboard. Requires 'xclip' package
# installed (sudo apt-get install xclip)

#unbind -t vi-copy y
bind -t vi-copy y copy-pipe "xclip -sel clip -i"
if-shell "uname | grep -q Darwin" "bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

bind c new-window -c "#{pane_current_path}"
